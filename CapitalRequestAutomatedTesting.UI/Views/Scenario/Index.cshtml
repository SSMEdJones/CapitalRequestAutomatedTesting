@using CapitalRequestAutomatedTesting.UI.ScenarioFramework
@model ScenarioFormViewModel
@{
    ViewData["Title"] = "Scenario";
}

<h2>Run Automated Test</h2>

<div>
    <div id="requestIdSpinner" style="display: none;">
        <span>Loading Request IDs...</span>
        <img src="~/images/spinner.gif" alt="Loading..." style="height: 20px;" />
    </div>
</div>

<form id="scenarioForm" method="post" asp-action="Index">
    <input type="hidden" name="ActionType" id="actionType" value="SelectRequest" />

    <div class="form-group">
        <label asp-for="RequestId" class="control-label"></label>
        <select asp-for="RequestId" asp-items="Model.RequestIds" class="form-control" onchange="document.getElementById('actionType').value='SelectRequest'; this.form.submit();">
            <option value="">-- Select One --</option>
        </select>
    </div>
  
    @if (Model.RequestId.HasValue && Model.RequestId.Value > 0 && Model.ScenarioDetails?.Any() == true)
    {
        <div id="scenarioList">
            <label>Select Scenario</label>

            @for (int i = 0; i < Model.ScenarioDetails.Count; i++)
            {
                <input type="hidden" asp-for=@Model.ScenarioDetails[i].ScenarioId />
                <input type="hidden" asp-for=@Model.ScenarioDetails[i].PartialViewName />
                <input type="hidden" asp-for=@Model.ScenarioDetails[i].DisplayText />
                <input type="hidden" asp-for=@Model.ScenarioDetails[i].ReviewerEmail />
                <input type="hidden" asp-for=@Model.ScenarioDetails[i].ReviewerUserId />

                var detail = Model.ScenarioDetails[i];
                var partialId = $"partial-{detail.ScenarioId}";

                <div class="scenario-wrapper">
                    <label>
                        @* <input type="checkbox" name="SelectedScenarioIds" value="@detail.ScenarioId" data-target="@partialId" /> *@
                        <input type="checkbox"
                               name="SelectedScenarioIds"
                               value="@detail.ScenarioId"
                               data-target="@partialId"
                        @(Model.SelectedScenarioIds?.Contains(detail.ScenarioId) == true ? "checked" : "") />
                        @detail.DisplayText
                    </label>

                    @* <div id="@partialId" class="scenario-partial" style="display: none;"> *@
                    <div id="@partialId" class="scenario-partial"
                         style="display: @(Model.SelectedScenarioIds?.Contains(detail.ScenarioId) == true ? "block" : "none")">
                        @{
                            var viewData = new ViewDataDictionary<ScenarioDetailsViewModel>(
                            ViewData,
                            detail
                            );
                            viewData.TemplateInfo.HtmlFieldPrefix = $"ScenarioDetails[{i}]";
                        }

                        @await Html.PartialAsync(detail.PartialViewName, detail, viewData)
                    </div>
                </div>
            }

            <button type="submit" onclick="document.getElementById('actionType').value='RunSelected';">
                Run Selected
            </button>
        </div>
    }

</form>



<div id="spinner" style="display:none;"></div>
<div id="status" style="display:none;"></div>

<div id="loadingModal" class="modal-overlay" style="display: none;">
    <div class="spinner-container">
        <img src="~/images/spinner.gif" alt="Loading..." />
        <p id="loadingMessage">Loading Requests...</p>
    </div>
</div>

<link rel="stylesheet" href="~/css/workflow.css" asp-append-version="true" />
<script src="~/js/scenario.js" asp-append-version="true"></script>









